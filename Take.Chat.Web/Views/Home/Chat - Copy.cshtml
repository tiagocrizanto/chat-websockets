@model string
@{
    ViewData["Title"] = "Home Page";
}
<!DOCTYPE html>
<html>
<head>
    <title>Chat</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.1.3/css/bootstrap.min.css" integrity="sha384-MCw98/SFnGE8fJT3GXwEOngsV7Zt27NXFoaoApmYm81iuXoPkFOJwJ8ERdknLPMO" crossorigin="anonymous">
    <link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.5.0/css/all.css" integrity="sha384-B4dIYHKNBt8Bc12p+WXckhzcICo0wtJAoU8YZTY5qE0Id1GSseTk6S+L3BlXeVIU" crossorigin="anonymous">
    <link rel="stylesheet" href="~/css/chat.css" />
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
    <link rel="stylesheet" type="text/css" href="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.css">
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/malihu-custom-scrollbar-plugin/3.1.5/jquery.mCustomScrollbar.min.js"></script>
</head>
<!--Coded With Love By Mutiullah Samim-->
<body>
    <div class="container-fluid h-100">
        <div class="row justify-content-center h-100">
            <div class="col-md-4 col-xl-3 chat">
                <div class="card mb-sm-3 mb-md-0 contacts_card">
                    <div class="card-body contacts_body">
                        <ui id="contacts" class="contacts">
                            
                        </ui>
                    </div>
                    <div class="card-footer"></div>
                </div>
            </div>
            <div class="col-md-8 col-xl-6 chat">
                <div class="card">
                    <div class="card-header msg_head">
                        <div class="d-flex bd-highlight">
                            <div class="user_info">
                                <span>Global chat</span>
                            </div>
                        </div>
                    </div>
                    <div id="msgs" class="card-body msg_card_body">
                    </div>
                    <div class="card-footer">
                        <div class="input-group">
                            <div class="input-group-append">
                                <span class="input-group-text attach_btn"><i class="fas fa-paperclip"></i></span>
                            </div>
                            <textarea id="MessageField" class="form-control type_msg" placeholder="Type your message..."></textarea>
                            <div class="input-group-append">
                                <span class="input-group-text send_btn"><i class="fas fa-location-arrow"></i></span>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        let sendMessageTemplate = '<div class="d-flex justify-content-start mb-4">'
            + '<div class="msg_cotainer">'
            + '<span class="msg_time">[userName]</span>'
            + '[text]'
            + '</div>'
            + '</div >';

        let receiveMessageTemplate = '<div class="d-flex justify-content-end mb-4">'
            + '<div class="msg_cotainer_send">'
            + '[text]'
            + '<span class="msg_time_send">[userName]</span>'
            + '</div >'
            + '</div >';

        let connectedUser = '<li id=[id] class="active">'
            + '<div class="d-flex bd-highlight">'
            + '<div class="img_cont">'
            + '<img src="/images/avatar.png" class="rounded-circle user_img">'
            + '</div>'
            + '<div class="user_info">'
            + '<span>[userName]</span>'
            + '</div>'
            + '</div>'
            + '</li >';

        $(function () {

            $('#action_menu_btn').click(function () {
                $('.action_menu').toggle();
            });

            let userName = '@Model';

            let protocol = location.protocol === "https:" ? "wss:" : "ws:";
            let chatSocket = new WebSocket(`${protocol}//${window.location.host}/chat`);
            let usersSocket = new WebSocket(`${protocol}//${window.location.host}/users`);

            chatSocket.onopen = e => {
                console.log('open' + userName);
            };

            usersSocket.onopen = e => {
                $("#contacts").append(connectedUser.replace('[userName]', userName).replace('[id]', Math.round(Math.random() * 99999)));
            };

            chatSocket.onclose = (e) => {
                console.log("socket closed", e);
            };

            window.onbeforeunload = function () {
                const messageObj = {
                    userName: 'fechou',
                    message: 'fechou'
                };
                chatSocket.send(JSON.stringify(messageObj));
                chatSocket.close();
            };

            chatSocket.onmessage = (e) => {
                let message = JSON.parse(e.data);
                console.log(chatSocket.clients);
                if (message.userName === userName) {
                    $('#msgs').append(sendMessageTemplate.replace('[text]', message.message).replace('[userName]', userName));
                } else {
                    $('#msgs').append(receiveMessageTemplate.replace('[text]', message.message).replace('[userName]', message.userName));
                }
            };

            chatSocket.onerror = (e) => {
                console.error(e.data);
            };

            $('#MessageField').keypress((e) => {
                if (e.which !== 13 || $('#MessageField').val() === '') {
                    return;
                }

                e.preventDefault();

                const messageObj = {
                    userName: userName,
                    message: $('#MessageField').val()
                }

                socket.send(JSON.stringify(messageObj));
                $('#MessageField').val('');
            });
        });
    </script>
</body>
</html>
